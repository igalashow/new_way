import os
from datetime import datetime
import telebot
import yadisk
from openpyxl import Workbook, load_workbook
from journalist_conf import TOKEN, CHATID, YA_TOKEN

bot = telebot.TeleBot(TOKEN)
y = yadisk.YaDisk(token=YA_TOKEN)
patch = ''  # –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É

# –ø–∏—à–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –≤ —Å–ø–∏—Å–æ–∫
with open(patch + 'journalsGNSS.txt') as f:
    open_journal: str = f.read().splitlines()[0]


@bot.message_handler(commands=['—Ö–µ–ª–ø'])
def help_command(message):
    """ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ """
    bot.send_message(
        CHATID,
        '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n' +
        'üåê*/–∂—É—Ä–Ω–∞–ª* <–æ–±—ä–µ–∫—Ç> - –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∂—É—Ä–Ω–∞–ª –ø–æ –æ–±—ä–µ–∫—Ç—É\n' +
        'üåê*/–∑–∞–ø–∏—Å—å* <–ø—É–Ω–∫—Ç> <–ø—Ä–∏—ë–º–Ω–∏–∫> <–≤—ã—Å–æ—Ç–∞> <—Ç–∏–ø –≤—ã—Å–æ—Ç—ã> - –∑–∞–ø–∏—Å—å –æ —Å–µ–∞–Ω—Å–µ\n' +
        'üåê*/—Å–∫–∞—á–∞—Ç—å* - —Å–∫–∞—á–∞—Ç—å –∂—É—Ä–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ XLSX –∏–∑ —Å–ø–∏—Å–∫–∞',
        parse_mode="Markdown"
    )


@bot.message_handler(content_types=['text'])
def work_command(message):
    """ –û—Ç—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—á–∏—Ö –∫–æ–º–∞–Ω–¥ """
    timemark = datetime.now().strftime('%d.%m.%y %H-%M-%S')

    if '/–∂—É—Ä–Ω–∞–ª' in message.text:
        obj = message.text[8:]
        j_name = obj + ' ' + timemark
        bot.send_message(CHATID, "üìó–ó–∞–≤–æ–∂—É –Ω–æ–≤—ã–π –∂—É—Ä–Ω–∞–ª: " + j_name)

        global open_journal
        old_journal = open_journal
        open_journal = j_name + '.xlsx'

        # C–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∂—É—Ä–Ω–∞–ª
        wb = Workbook(patch + open_journal)
        ws = wb.create_sheet(timemark)
        ws.append(["–ü—É–Ω–∫—Ç", "–ü—Ä–∏—ë–º–Ω–∏–∫", "–í—ã—Å–æ—Ç–∞", "–¢–∏–ø –≤—ã—Å–æ—Ç—ã"])
        wb.save(os.path.dirname(os.path.abspath(__file__)) + '/' + open_journal)

        # –ø–∏—à–µ–º –Ω–æ–≤—ã–π –∂—É—Ä–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫
        f = open(patch + 'journalsGNSS.txt', 'w')
        f.write(open_journal)
        f.close()

        bot.send_message(CHATID, "–ü–∏—à–∏: /–∑–∞–ø–∏—Å—å <–ø—É–Ω–∫—Ç> <–ø—Ä–∏—ë–º–Ω–∏–∫> <–≤—ã—Å–æ—Ç–∞> <—Ç–∏–ø –≤—ã—Å–æ—Ç—ã>")

        # —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∂—É—Ä–Ω–∞–ª
        os.remove(patch + old_journal)

    if '/–∑–∞–ø–∏—Å—å' in message.text:
        record = message.text[8:].split(sep=' ')  # –∑–∞–ø–∏—Å–∏ –≤ —Å–ø–∏—Å–æ–∫

        wb = load_workbook(patch + open_journal)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —ç–∫—Å–µ–ª—å –∂—É—Ä–Ω–∞–ª –¥–∞–Ω–Ω—ã–µ
        ws = wb.active
        ws.append(rec for rec in record)
        wb.save(os.path.dirname(os.path.abspath(__file__)) + '/' + open_journal)

        try:
            # –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª –∏ –µ—Å—Ç—å –æ–ª–¥
            if y.exists('/GNSS/' + open_journal) and y.exists('/GNSS/' + open_journal + '_old'):
                # —É–¥–∞–ª—è–µ–º –æ–ª–¥
                y.remove('/GNSS/' + open_journal + '_old')  
                # –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ –æ–ª–¥
                y.move('/GNSS/' + open_journal, '/GNSS/' + open_journal + '_old')
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —è–¥–∏—Å–∫
                y.upload(patch + open_journal, '/GNSS/' + open_journal)

            # –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª –Ω–∞ —è–¥–∏—Å–∫–µ, –Ω–æ –Ω–µ—Ç –æ–ª–¥–∞
            elif y.exists('/GNSS/' + open_journal) and not y.exists('/GNSS/' + open_journal + '_old'):
                # –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ –æ–ª–¥
                y.move('/GNSS/' + open_journal, '/GNSS/' + open_journal + '_old')
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —è–¥–∏—Å–∫
                y.upload(patch + open_journal, '/GNSS/' + open_journal)
            
            # –µ—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ –Ω–∞ –¥–∏—Å–∫–µ
            else:
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —è–¥–∏—Å–∫
                y.upload(patch + open_journal, '/GNSS/' + open_journal)  

        except Exception as e:
            bot.send_message(CHATID, "–û—à–∏–±–∫–∞:\n " + str(e))

        bot.send_message(CHATID, "–ó–∞–ø–∏—Å–∞–Ω–æ –≤ –∂—É—Ä–Ω–∞–ª üìó " + open_journal)

    if '/—Å–∫–∞—á–∞—Ç—å' in message.text:
        bot.send_message(CHATID, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


try:
    bot.polling(none_stop=True, interval=1)
except:
    pass
